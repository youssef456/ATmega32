
DIO_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000060c  00000000  00000000  00000740  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000464  00000000  00000000  00000d4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
  64:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_U8_SetPinValue>:
#include "bit_calc.h"
#include "DIO_Config.h"
#include "DIO_Interface.h"
#include "DIO_Private.h"

u8 DIO_U8_SetPinValue(u8 copy_U8_Port_ID,u8 copy_U8_Pin_ID, u8 copy_U8_Pin_Val){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_U8_SetPinValue+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_U8_SetPinValue+0x8>
  74:	00 d0       	rcall	.+0      	; 0x76 <DIO_U8_SetPinValue+0xa>
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03

	if((copy_U8_Pin_ID>=PIN0) && (copy_U8_Pin_ID <= PIN7) ){
  80:	8a 81       	ldd	r24, Y+2	; 0x02
  82:	88 30       	cpi	r24, 0x08	; 8
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_U8_SetPinValue+0x1c>
  86:	de c0       	rjmp	.+444    	; 0x244 <DIO_U8_SetPinValue+0x1d8>
		if((copy_U8_Pin_Val == LOW) || (copy_U8_Pin_Val ==HIGH) ){
  88:	8b 81       	ldd	r24, Y+3	; 0x03
  8a:	88 23       	and	r24, r24
  8c:	21 f0       	breq	.+8      	; 0x96 <DIO_U8_SetPinValue+0x2a>
  8e:	8b 81       	ldd	r24, Y+3	; 0x03
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	09 f0       	breq	.+2      	; 0x96 <DIO_U8_SetPinValue+0x2a>
  94:	d4 c0       	rjmp	.+424    	; 0x23e <DIO_U8_SetPinValue+0x1d2>
			switch(copy_U8_Port_ID){
  96:	89 81       	ldd	r24, Y+1	; 0x01
  98:	28 2f       	mov	r18, r24
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	3e 83       	std	Y+6, r19	; 0x06
  9e:	2d 83       	std	Y+5, r18	; 0x05
  a0:	8d 81       	ldd	r24, Y+5	; 0x05
  a2:	9e 81       	ldd	r25, Y+6	; 0x06
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	09 f4       	brne	.+2      	; 0xac <DIO_U8_SetPinValue+0x40>
  aa:	43 c0       	rjmp	.+134    	; 0x132 <DIO_U8_SetPinValue+0xc6>
  ac:	2d 81       	ldd	r18, Y+5	; 0x05
  ae:	3e 81       	ldd	r19, Y+6	; 0x06
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	2c f4       	brge	.+10     	; 0xc0 <DIO_U8_SetPinValue+0x54>
  b6:	8d 81       	ldd	r24, Y+5	; 0x05
  b8:	9e 81       	ldd	r25, Y+6	; 0x06
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	71 f0       	breq	.+28     	; 0xda <DIO_U8_SetPinValue+0x6e>
  be:	bc c0       	rjmp	.+376    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
  c0:	2d 81       	ldd	r18, Y+5	; 0x05
  c2:	3e 81       	ldd	r19, Y+6	; 0x06
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	09 f4       	brne	.+2      	; 0xcc <DIO_U8_SetPinValue+0x60>
  ca:	5f c0       	rjmp	.+190    	; 0x18a <DIO_U8_SetPinValue+0x11e>
  cc:	8d 81       	ldd	r24, Y+5	; 0x05
  ce:	9e 81       	ldd	r25, Y+6	; 0x06
  d0:	83 30       	cpi	r24, 0x03	; 3
  d2:	91 05       	cpc	r25, r1
  d4:	09 f4       	brne	.+2      	; 0xd8 <DIO_U8_SetPinValue+0x6c>
  d6:	85 c0       	rjmp	.+266    	; 0x1e2 <DIO_U8_SetPinValue+0x176>
  d8:	af c0       	rjmp	.+350    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
				case Group_A:
					assign_Bit(DIO_U8_PORTA,copy_U8_Pin_ID,copy_U8_Pin_Val);
  da:	8b 81       	ldd	r24, Y+3	; 0x03
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	a1 f4       	brne	.+40     	; 0x108 <DIO_U8_SetPinValue+0x9c>
  e0:	ab e3       	ldi	r26, 0x3B	; 59
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	eb e3       	ldi	r30, 0x3B	; 59
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	48 2f       	mov	r20, r24
  ec:	8a 81       	ldd	r24, Y+2	; 0x02
  ee:	28 2f       	mov	r18, r24
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 2e       	mov	r0, r18
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_U8_SetPinValue+0x92>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_U8_SetPinValue+0x8e>
 102:	84 2b       	or	r24, r20
 104:	8c 93       	st	X, r24
 106:	98 c0       	rjmp	.+304    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
 108:	ab e3       	ldi	r26, 0x3B	; 59
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	eb e3       	ldi	r30, 0x3B	; 59
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	48 2f       	mov	r20, r24
 114:	8a 81       	ldd	r24, Y+2	; 0x02
 116:	28 2f       	mov	r18, r24
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 2e       	mov	r0, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_U8_SetPinValue+0xba>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_U8_SetPinValue+0xb6>
 12a:	80 95       	com	r24
 12c:	84 23       	and	r24, r20
 12e:	8c 93       	st	X, r24
 130:	83 c0       	rjmp	.+262    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
					break;
				case Group_B:
					assign_Bit(DIO_U8_PORTB,copy_U8_Pin_ID,copy_U8_Pin_Val);
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	a1 f4       	brne	.+40     	; 0x160 <DIO_U8_SetPinValue+0xf4>
 138:	a8 e3       	ldi	r26, 0x38	; 56
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	e8 e3       	ldi	r30, 0x38	; 56
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	48 2f       	mov	r20, r24
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 2e       	mov	r0, r18
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_U8_SetPinValue+0xea>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_U8_SetPinValue+0xe6>
 15a:	84 2b       	or	r24, r20
 15c:	8c 93       	st	X, r24
 15e:	6c c0       	rjmp	.+216    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
 160:	a8 e3       	ldi	r26, 0x38	; 56
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	e8 e3       	ldi	r30, 0x38	; 56
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	48 2f       	mov	r20, r24
 16c:	8a 81       	ldd	r24, Y+2	; 0x02
 16e:	28 2f       	mov	r18, r24
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 2e       	mov	r0, r18
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_U8_SetPinValue+0x112>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	0a 94       	dec	r0
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_U8_SetPinValue+0x10e>
 182:	80 95       	com	r24
 184:	84 23       	and	r24, r20
 186:	8c 93       	st	X, r24
 188:	57 c0       	rjmp	.+174    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
					break;
				case Group_C:
					assign_Bit(DIO_U8_PORTC,copy_U8_Pin_ID,copy_U8_Pin_Val);
 18a:	8b 81       	ldd	r24, Y+3	; 0x03
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	a1 f4       	brne	.+40     	; 0x1b8 <DIO_U8_SetPinValue+0x14c>
 190:	a5 e3       	ldi	r26, 0x35	; 53
 192:	b0 e0       	ldi	r27, 0x00	; 0
 194:	e5 e3       	ldi	r30, 0x35	; 53
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	48 2f       	mov	r20, r24
 19c:	8a 81       	ldd	r24, Y+2	; 0x02
 19e:	28 2f       	mov	r18, r24
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 2e       	mov	r0, r18
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_U8_SetPinValue+0x142>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	0a 94       	dec	r0
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_U8_SetPinValue+0x13e>
 1b2:	84 2b       	or	r24, r20
 1b4:	8c 93       	st	X, r24
 1b6:	40 c0       	rjmp	.+128    	; 0x238 <DIO_U8_SetPinValue+0x1cc>
 1b8:	a5 e3       	ldi	r26, 0x35	; 53
 1ba:	b0 e0       	ldi	r27, 0x00	; 0
 1bc:	e5 e3       	ldi	r30, 0x35	; 53
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	48 2f       	mov	r20, r24
 1c4:	8a 81       	ldd	r24, Y+2	; 0x02
 1c6:	28 2f       	mov	r18, r24
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 2e       	mov	r0, r18
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_U8_SetPinValue+0x16a>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	0a 94       	dec	r0
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_U8_SetPinValue+0x166>
 1da:	80 95       	com	r24
 1dc:	84 23       	and	r24, r20
 1de:	8c 93       	st	X, r24
 1e0:	2b c0       	rjmp	.+86     	; 0x238 <DIO_U8_SetPinValue+0x1cc>
					break;
				case Group_D:
					assign_Bit(DIO_U8_PORTD,copy_U8_Pin_ID,copy_U8_Pin_Val);
 1e2:	8b 81       	ldd	r24, Y+3	; 0x03
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	a1 f4       	brne	.+40     	; 0x210 <DIO_U8_SetPinValue+0x1a4>
 1e8:	a2 e3       	ldi	r26, 0x32	; 50
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	e2 e3       	ldi	r30, 0x32	; 50
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	48 2f       	mov	r20, r24
 1f4:	8a 81       	ldd	r24, Y+2	; 0x02
 1f6:	28 2f       	mov	r18, r24
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 2e       	mov	r0, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_U8_SetPinValue+0x19a>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_U8_SetPinValue+0x196>
 20a:	84 2b       	or	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	14 c0       	rjmp	.+40     	; 0x238 <DIO_U8_SetPinValue+0x1cc>
 210:	a2 e3       	ldi	r26, 0x32	; 50
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e2 e3       	ldi	r30, 0x32	; 50
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8a 81       	ldd	r24, Y+2	; 0x02
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_U8_SetPinValue+0x1c2>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_U8_SetPinValue+0x1be>
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	8c 93       	st	X, r24
					break;
			}
			return 1;
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	9c 83       	std	Y+4, r25	; 0x04
 23c:	05 c0       	rjmp	.+10     	; 0x248 <DIO_U8_SetPinValue+0x1dc>
		}
		else{
			return Invalid_Pin_Value;
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	2c 83       	std	Y+4, r18	; 0x04
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_U8_SetPinValue+0x1dc>
		}
	}
		else {
			return Invalid_Pin_ID;
 244:	3f ef       	ldi	r19, 0xFF	; 255
 246:	3c 83       	std	Y+4, r19	; 0x04
 248:	8c 81       	ldd	r24, Y+4	; 0x04
		}
}
 24a:	26 96       	adiw	r28, 0x06	; 6
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	f8 94       	cli
 250:	de bf       	out	0x3e, r29	; 62
 252:	0f be       	out	0x3f, r0	; 63
 254:	cd bf       	out	0x3d, r28	; 61
 256:	cf 91       	pop	r28
 258:	df 91       	pop	r29
 25a:	08 95       	ret

0000025c <DIO_U8_GetPinValue>:

u8 DIO_U8_GetPinValue(u8 Copy_U8_Port_ID,u8 Copy_U8_Pin_ID){
 25c:	df 93       	push	r29
 25e:	cf 93       	push	r28
 260:	00 d0       	rcall	.+0      	; 0x262 <DIO_U8_GetPinValue+0x6>
 262:	00 d0       	rcall	.+0      	; 0x264 <DIO_U8_GetPinValue+0x8>
 264:	00 d0       	rcall	.+0      	; 0x266 <DIO_U8_GetPinValue+0xa>
 266:	cd b7       	in	r28, 0x3d	; 61
 268:	de b7       	in	r29, 0x3e	; 62
 26a:	8a 83       	std	Y+2, r24	; 0x02
 26c:	6b 83       	std	Y+3, r22	; 0x03

	// set a local variable for result.
	u8 loc_Result;

	//handler for the function call (port and pin in valid range check)
	if((Copy_U8_Port_ID <= Group_D) && (Copy_U8_Pin_ID <= PIN7)){
 26e:	8a 81       	ldd	r24, Y+2	; 0x02
 270:	84 30       	cpi	r24, 0x04	; 4
 272:	08 f0       	brcs	.+2      	; 0x276 <DIO_U8_GetPinValue+0x1a>
 274:	6e c0       	rjmp	.+220    	; 0x352 <DIO_U8_GetPinValue+0xf6>
 276:	8b 81       	ldd	r24, Y+3	; 0x03
 278:	88 30       	cpi	r24, 0x08	; 8
 27a:	08 f0       	brcs	.+2      	; 0x27e <DIO_U8_GetPinValue+0x22>
 27c:	6a c0       	rjmp	.+212    	; 0x352 <DIO_U8_GetPinValue+0xf6>

		switch (Copy_U8_Port_ID) {
 27e:	8a 81       	ldd	r24, Y+2	; 0x02
 280:	28 2f       	mov	r18, r24
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	3e 83       	std	Y+6, r19	; 0x06
 286:	2d 83       	std	Y+5, r18	; 0x05
 288:	4d 81       	ldd	r20, Y+5	; 0x05
 28a:	5e 81       	ldd	r21, Y+6	; 0x06
 28c:	41 30       	cpi	r20, 0x01	; 1
 28e:	51 05       	cpc	r21, r1
 290:	41 f1       	breq	.+80     	; 0x2e2 <DIO_U8_GetPinValue+0x86>
 292:	8d 81       	ldd	r24, Y+5	; 0x05
 294:	9e 81       	ldd	r25, Y+6	; 0x06
 296:	82 30       	cpi	r24, 0x02	; 2
 298:	91 05       	cpc	r25, r1
 29a:	34 f4       	brge	.+12     	; 0x2a8 <DIO_U8_GetPinValue+0x4c>
 29c:	2d 81       	ldd	r18, Y+5	; 0x05
 29e:	3e 81       	ldd	r19, Y+6	; 0x06
 2a0:	21 15       	cp	r18, r1
 2a2:	31 05       	cpc	r19, r1
 2a4:	61 f0       	breq	.+24     	; 0x2be <DIO_U8_GetPinValue+0x62>
 2a6:	52 c0       	rjmp	.+164    	; 0x34c <DIO_U8_GetPinValue+0xf0>
 2a8:	4d 81       	ldd	r20, Y+5	; 0x05
 2aa:	5e 81       	ldd	r21, Y+6	; 0x06
 2ac:	42 30       	cpi	r20, 0x02	; 2
 2ae:	51 05       	cpc	r21, r1
 2b0:	51 f1       	breq	.+84     	; 0x306 <DIO_U8_GetPinValue+0xaa>
 2b2:	8d 81       	ldd	r24, Y+5	; 0x05
 2b4:	9e 81       	ldd	r25, Y+6	; 0x06
 2b6:	83 30       	cpi	r24, 0x03	; 3
 2b8:	91 05       	cpc	r25, r1
 2ba:	b9 f1       	breq	.+110    	; 0x32a <DIO_U8_GetPinValue+0xce>
 2bc:	47 c0       	rjmp	.+142    	; 0x34c <DIO_U8_GetPinValue+0xf0>
			case Group_A:
				loc_Result = get_Bit(DIO_U8_PINA,Copy_U8_Pin_ID);
 2be:	e9 e3       	ldi	r30, 0x39	; 57
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
 2c2:	80 81       	ld	r24, Z
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ca:	88 2f       	mov	r24, r24
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	a9 01       	movw	r20, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_U8_GetPinValue+0x7a>
 2d2:	55 95       	asr	r21
 2d4:	47 95       	ror	r20
 2d6:	8a 95       	dec	r24
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_U8_GetPinValue+0x76>
 2da:	ca 01       	movw	r24, r20
 2dc:	81 70       	andi	r24, 0x01	; 1
 2de:	89 83       	std	Y+1, r24	; 0x01
 2e0:	35 c0       	rjmp	.+106    	; 0x34c <DIO_U8_GetPinValue+0xf0>
				break;
			case Group_B:
				loc_Result = get_Bit(DIO_U8_PINB,Copy_U8_Pin_ID);
 2e2:	e6 e3       	ldi	r30, 0x36	; 54
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	80 81       	ld	r24, Z
 2e8:	28 2f       	mov	r18, r24
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	8b 81       	ldd	r24, Y+3	; 0x03
 2ee:	88 2f       	mov	r24, r24
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	a9 01       	movw	r20, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_U8_GetPinValue+0x9e>
 2f6:	55 95       	asr	r21
 2f8:	47 95       	ror	r20
 2fa:	8a 95       	dec	r24
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_U8_GetPinValue+0x9a>
 2fe:	ca 01       	movw	r24, r20
 300:	81 70       	andi	r24, 0x01	; 1
 302:	89 83       	std	Y+1, r24	; 0x01
 304:	23 c0       	rjmp	.+70     	; 0x34c <DIO_U8_GetPinValue+0xf0>
				break;
			case Group_C:
				loc_Result = get_Bit(DIO_U8_PINC,Copy_U8_Pin_ID);
 306:	e3 e3       	ldi	r30, 0x33	; 51
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	80 81       	ld	r24, Z
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	8b 81       	ldd	r24, Y+3	; 0x03
 312:	88 2f       	mov	r24, r24
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	a9 01       	movw	r20, r18
 318:	02 c0       	rjmp	.+4      	; 0x31e <DIO_U8_GetPinValue+0xc2>
 31a:	55 95       	asr	r21
 31c:	47 95       	ror	r20
 31e:	8a 95       	dec	r24
 320:	e2 f7       	brpl	.-8      	; 0x31a <DIO_U8_GetPinValue+0xbe>
 322:	ca 01       	movw	r24, r20
 324:	81 70       	andi	r24, 0x01	; 1
 326:	89 83       	std	Y+1, r24	; 0x01
 328:	11 c0       	rjmp	.+34     	; 0x34c <DIO_U8_GetPinValue+0xf0>
				break;
			case Group_D:
				loc_Result = get_Bit(DIO_U8_PIND,Copy_U8_Pin_ID);
 32a:	e0 e3       	ldi	r30, 0x30	; 48
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	80 81       	ld	r24, Z
 330:	28 2f       	mov	r18, r24
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	8b 81       	ldd	r24, Y+3	; 0x03
 336:	88 2f       	mov	r24, r24
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	a9 01       	movw	r20, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_U8_GetPinValue+0xe6>
 33e:	55 95       	asr	r21
 340:	47 95       	ror	r20
 342:	8a 95       	dec	r24
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_U8_GetPinValue+0xe2>
 346:	ca 01       	movw	r24, r20
 348:	81 70       	andi	r24, 0x01	; 1
 34a:	89 83       	std	Y+1, r24	; 0x01
		}
	}else{
		//set var to 0xFF in case of error in func input
		return Invalid_Pin_ID;
	}
	return loc_Result;
 34c:	59 81       	ldd	r21, Y+1	; 0x01
 34e:	5c 83       	std	Y+4, r21	; 0x04
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_U8_GetPinValue+0xfa>
				loc_Result = get_Bit(DIO_U8_PIND,Copy_U8_Pin_ID);
				break;
		}
	}else{
		//set var to 0xFF in case of error in func input
		return Invalid_Pin_ID;
 352:	8f ef       	ldi	r24, 0xFF	; 255
 354:	8c 83       	std	Y+4, r24	; 0x04
 356:	8c 81       	ldd	r24, Y+4	; 0x04
	}
	return loc_Result;

}
 358:	26 96       	adiw	r28, 0x06	; 6
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	f8 94       	cli
 35e:	de bf       	out	0x3e, r29	; 62
 360:	0f be       	out	0x3f, r0	; 63
 362:	cd bf       	out	0x3d, r28	; 61
 364:	cf 91       	pop	r28
 366:	df 91       	pop	r29
 368:	08 95       	ret

0000036a <DIO_U8_SetPinDirection>:

void DIO_U8_SetPinDirection(u8 Copy_U8_Port_ID,u8 Copy_U8_Pin_ID,u8 Copy_U8_Pin_Dir){
 36a:	df 93       	push	r29
 36c:	cf 93       	push	r28
 36e:	00 d0       	rcall	.+0      	; 0x370 <DIO_U8_SetPinDirection+0x6>
 370:	00 d0       	rcall	.+0      	; 0x372 <DIO_U8_SetPinDirection+0x8>
 372:	0f 92       	push	r0
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	6a 83       	std	Y+2, r22	; 0x02
 37c:	4b 83       	std	Y+3, r20	; 0x03
	// handler to check if the port id and pin id in the correct range
	if(Copy_U8_Port_ID <= Group_D && Copy_U8_Pin_ID <= PIN7){
 37e:	89 81       	ldd	r24, Y+1	; 0x01
 380:	84 30       	cpi	r24, 0x04	; 4
 382:	08 f0       	brcs	.+2      	; 0x386 <DIO_U8_SetPinDirection+0x1c>
 384:	d5 c0       	rjmp	.+426    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 386:	8a 81       	ldd	r24, Y+2	; 0x02
 388:	88 30       	cpi	r24, 0x08	; 8
 38a:	08 f0       	brcs	.+2      	; 0x38e <DIO_U8_SetPinDirection+0x24>
 38c:	d1 c0       	rjmp	.+418    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>

		switch(Copy_U8_Port_ID){
 38e:	89 81       	ldd	r24, Y+1	; 0x01
 390:	28 2f       	mov	r18, r24
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	3d 83       	std	Y+5, r19	; 0x05
 396:	2c 83       	std	Y+4, r18	; 0x04
 398:	8c 81       	ldd	r24, Y+4	; 0x04
 39a:	9d 81       	ldd	r25, Y+5	; 0x05
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	91 05       	cpc	r25, r1
 3a0:	09 f4       	brne	.+2      	; 0x3a4 <DIO_U8_SetPinDirection+0x3a>
 3a2:	43 c0       	rjmp	.+134    	; 0x42a <DIO_U8_SetPinDirection+0xc0>
 3a4:	2c 81       	ldd	r18, Y+4	; 0x04
 3a6:	3d 81       	ldd	r19, Y+5	; 0x05
 3a8:	22 30       	cpi	r18, 0x02	; 2
 3aa:	31 05       	cpc	r19, r1
 3ac:	2c f4       	brge	.+10     	; 0x3b8 <DIO_U8_SetPinDirection+0x4e>
 3ae:	8c 81       	ldd	r24, Y+4	; 0x04
 3b0:	9d 81       	ldd	r25, Y+5	; 0x05
 3b2:	00 97       	sbiw	r24, 0x00	; 0
 3b4:	71 f0       	breq	.+28     	; 0x3d2 <DIO_U8_SetPinDirection+0x68>
 3b6:	bc c0       	rjmp	.+376    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 3b8:	2c 81       	ldd	r18, Y+4	; 0x04
 3ba:	3d 81       	ldd	r19, Y+5	; 0x05
 3bc:	22 30       	cpi	r18, 0x02	; 2
 3be:	31 05       	cpc	r19, r1
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <DIO_U8_SetPinDirection+0x5a>
 3c2:	5f c0       	rjmp	.+190    	; 0x482 <DIO_U8_SetPinDirection+0x118>
 3c4:	8c 81       	ldd	r24, Y+4	; 0x04
 3c6:	9d 81       	ldd	r25, Y+5	; 0x05
 3c8:	83 30       	cpi	r24, 0x03	; 3
 3ca:	91 05       	cpc	r25, r1
 3cc:	09 f4       	brne	.+2      	; 0x3d0 <DIO_U8_SetPinDirection+0x66>
 3ce:	85 c0       	rjmp	.+266    	; 0x4da <DIO_U8_SetPinDirection+0x170>
 3d0:	af c0       	rjmp	.+350    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>

		case Group_A:
			assign_Bit(DIO_U8_DDRA,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
 3d2:	8b 81       	ldd	r24, Y+3	; 0x03
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	a1 f4       	brne	.+40     	; 0x400 <DIO_U8_SetPinDirection+0x96>
 3d8:	aa e3       	ldi	r26, 0x3A	; 58
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	ea e3       	ldi	r30, 0x3A	; 58
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	48 2f       	mov	r20, r24
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
 3e6:	28 2f       	mov	r18, r24
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	02 2e       	mov	r0, r18
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <DIO_U8_SetPinDirection+0x8c>
 3f2:	88 0f       	add	r24, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	0a 94       	dec	r0
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <DIO_U8_SetPinDirection+0x88>
 3fa:	84 2b       	or	r24, r20
 3fc:	8c 93       	st	X, r24
 3fe:	98 c0       	rjmp	.+304    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 400:	aa e3       	ldi	r26, 0x3A	; 58
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	ea e3       	ldi	r30, 0x3A	; 58
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	80 81       	ld	r24, Z
 40a:	48 2f       	mov	r20, r24
 40c:	8a 81       	ldd	r24, Y+2	; 0x02
 40e:	28 2f       	mov	r18, r24
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	02 2e       	mov	r0, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <DIO_U8_SetPinDirection+0xb4>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <DIO_U8_SetPinDirection+0xb0>
 422:	80 95       	com	r24
 424:	84 23       	and	r24, r20
 426:	8c 93       	st	X, r24
 428:	83 c0       	rjmp	.+262    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
			break;
		case Group_B:
			assign_Bit(DIO_U8_DDRB,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
 42a:	8b 81       	ldd	r24, Y+3	; 0x03
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	a1 f4       	brne	.+40     	; 0x458 <DIO_U8_SetPinDirection+0xee>
 430:	a7 e3       	ldi	r26, 0x37	; 55
 432:	b0 e0       	ldi	r27, 0x00	; 0
 434:	e7 e3       	ldi	r30, 0x37	; 55
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	48 2f       	mov	r20, r24
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 2e       	mov	r0, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <DIO_U8_SetPinDirection+0xe4>
 44a:	88 0f       	add	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	0a 94       	dec	r0
 450:	e2 f7       	brpl	.-8      	; 0x44a <DIO_U8_SetPinDirection+0xe0>
 452:	84 2b       	or	r24, r20
 454:	8c 93       	st	X, r24
 456:	6c c0       	rjmp	.+216    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 458:	a7 e3       	ldi	r26, 0x37	; 55
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e7 e3       	ldi	r30, 0x37	; 55
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	80 81       	ld	r24, Z
 462:	48 2f       	mov	r20, r24
 464:	8a 81       	ldd	r24, Y+2	; 0x02
 466:	28 2f       	mov	r18, r24
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	02 2e       	mov	r0, r18
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_U8_SetPinDirection+0x10c>
 472:	88 0f       	add	r24, r24
 474:	99 1f       	adc	r25, r25
 476:	0a 94       	dec	r0
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_U8_SetPinDirection+0x108>
 47a:	80 95       	com	r24
 47c:	84 23       	and	r24, r20
 47e:	8c 93       	st	X, r24
 480:	57 c0       	rjmp	.+174    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
			break;
		case Group_C:
			assign_Bit(DIO_U8_DDRC,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
 482:	8b 81       	ldd	r24, Y+3	; 0x03
 484:	81 30       	cpi	r24, 0x01	; 1
 486:	a1 f4       	brne	.+40     	; 0x4b0 <DIO_U8_SetPinDirection+0x146>
 488:	a4 e3       	ldi	r26, 0x34	; 52
 48a:	b0 e0       	ldi	r27, 0x00	; 0
 48c:	e4 e3       	ldi	r30, 0x34	; 52
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	80 81       	ld	r24, Z
 492:	48 2f       	mov	r20, r24
 494:	8a 81       	ldd	r24, Y+2	; 0x02
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 2e       	mov	r0, r18
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <DIO_U8_SetPinDirection+0x13c>
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	0a 94       	dec	r0
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <DIO_U8_SetPinDirection+0x138>
 4aa:	84 2b       	or	r24, r20
 4ac:	8c 93       	st	X, r24
 4ae:	40 c0       	rjmp	.+128    	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 4b0:	a4 e3       	ldi	r26, 0x34	; 52
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	e4 e3       	ldi	r30, 0x34	; 52
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	80 81       	ld	r24, Z
 4ba:	48 2f       	mov	r20, r24
 4bc:	8a 81       	ldd	r24, Y+2	; 0x02
 4be:	28 2f       	mov	r18, r24
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	02 2e       	mov	r0, r18
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <DIO_U8_SetPinDirection+0x164>
 4ca:	88 0f       	add	r24, r24
 4cc:	99 1f       	adc	r25, r25
 4ce:	0a 94       	dec	r0
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <DIO_U8_SetPinDirection+0x160>
 4d2:	80 95       	com	r24
 4d4:	84 23       	and	r24, r20
 4d6:	8c 93       	st	X, r24
 4d8:	2b c0       	rjmp	.+86     	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
			break;
		case Group_D:
			assign_Bit(DIO_U8_DDRD,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
 4da:	8b 81       	ldd	r24, Y+3	; 0x03
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	a1 f4       	brne	.+40     	; 0x508 <DIO_U8_SetPinDirection+0x19e>
 4e0:	a1 e3       	ldi	r26, 0x31	; 49
 4e2:	b0 e0       	ldi	r27, 0x00	; 0
 4e4:	e1 e3       	ldi	r30, 0x31	; 49
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	80 81       	ld	r24, Z
 4ea:	48 2f       	mov	r20, r24
 4ec:	8a 81       	ldd	r24, Y+2	; 0x02
 4ee:	28 2f       	mov	r18, r24
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	02 2e       	mov	r0, r18
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <DIO_U8_SetPinDirection+0x194>
 4fa:	88 0f       	add	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	0a 94       	dec	r0
 500:	e2 f7       	brpl	.-8      	; 0x4fa <DIO_U8_SetPinDirection+0x190>
 502:	84 2b       	or	r24, r20
 504:	8c 93       	st	X, r24
 506:	14 c0       	rjmp	.+40     	; 0x530 <DIO_U8_SetPinDirection+0x1c6>
 508:	a1 e3       	ldi	r26, 0x31	; 49
 50a:	b0 e0       	ldi	r27, 0x00	; 0
 50c:	e1 e3       	ldi	r30, 0x31	; 49
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	80 81       	ld	r24, Z
 512:	48 2f       	mov	r20, r24
 514:	8a 81       	ldd	r24, Y+2	; 0x02
 516:	28 2f       	mov	r18, r24
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 2e       	mov	r0, r18
 520:	02 c0       	rjmp	.+4      	; 0x526 <DIO_U8_SetPinDirection+0x1bc>
 522:	88 0f       	add	r24, r24
 524:	99 1f       	adc	r25, r25
 526:	0a 94       	dec	r0
 528:	e2 f7       	brpl	.-8      	; 0x522 <DIO_U8_SetPinDirection+0x1b8>
 52a:	80 95       	com	r24
 52c:	84 23       	and	r24, r20
 52e:	8c 93       	st	X, r24
		}
	}else{
		//do nothing wrong function parameters were given.
	}

}
 530:	0f 90       	pop	r0
 532:	0f 90       	pop	r0
 534:	0f 90       	pop	r0
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	cf 91       	pop	r28
 53c:	df 91       	pop	r29
 53e:	08 95       	ret

00000540 <DIO_U8_SetPortDirection>:

void DIO_U8_SetPortDirection(u8 Copy_U8_Port_ID,u8 Copy_u8_Port_Dir){
 540:	df 93       	push	r29
 542:	cf 93       	push	r28
 544:	00 d0       	rcall	.+0      	; 0x546 <DIO_U8_SetPortDirection+0x6>
 546:	00 d0       	rcall	.+0      	; 0x548 <DIO_U8_SetPortDirection+0x8>
 548:	cd b7       	in	r28, 0x3d	; 61
 54a:	de b7       	in	r29, 0x3e	; 62
 54c:	89 83       	std	Y+1, r24	; 0x01
 54e:	6a 83       	std	Y+2, r22	; 0x02

	switch(Copy_U8_Port_ID){
 550:	89 81       	ldd	r24, Y+1	; 0x01
 552:	28 2f       	mov	r18, r24
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	3c 83       	std	Y+4, r19	; 0x04
 558:	2b 83       	std	Y+3, r18	; 0x03
 55a:	8b 81       	ldd	r24, Y+3	; 0x03
 55c:	9c 81       	ldd	r25, Y+4	; 0x04
 55e:	81 30       	cpi	r24, 0x01	; 1
 560:	91 05       	cpc	r25, r1
 562:	d1 f0       	breq	.+52     	; 0x598 <DIO_U8_SetPortDirection+0x58>
 564:	2b 81       	ldd	r18, Y+3	; 0x03
 566:	3c 81       	ldd	r19, Y+4	; 0x04
 568:	22 30       	cpi	r18, 0x02	; 2
 56a:	31 05       	cpc	r19, r1
 56c:	2c f4       	brge	.+10     	; 0x578 <DIO_U8_SetPortDirection+0x38>
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
 570:	9c 81       	ldd	r25, Y+4	; 0x04
 572:	00 97       	sbiw	r24, 0x00	; 0
 574:	61 f0       	breq	.+24     	; 0x58e <DIO_U8_SetPortDirection+0x4e>
 576:	1e c0       	rjmp	.+60     	; 0x5b4 <DIO_U8_SetPortDirection+0x74>
 578:	2b 81       	ldd	r18, Y+3	; 0x03
 57a:	3c 81       	ldd	r19, Y+4	; 0x04
 57c:	22 30       	cpi	r18, 0x02	; 2
 57e:	31 05       	cpc	r19, r1
 580:	81 f0       	breq	.+32     	; 0x5a2 <DIO_U8_SetPortDirection+0x62>
 582:	8b 81       	ldd	r24, Y+3	; 0x03
 584:	9c 81       	ldd	r25, Y+4	; 0x04
 586:	83 30       	cpi	r24, 0x03	; 3
 588:	91 05       	cpc	r25, r1
 58a:	81 f0       	breq	.+32     	; 0x5ac <DIO_U8_SetPortDirection+0x6c>
 58c:	13 c0       	rjmp	.+38     	; 0x5b4 <DIO_U8_SetPortDirection+0x74>

	case Group_A:
		DIO_U8_DDRA = Copy_u8_Port_Dir;
 58e:	ea e3       	ldi	r30, 0x3A	; 58
 590:	f0 e0       	ldi	r31, 0x00	; 0
 592:	8a 81       	ldd	r24, Y+2	; 0x02
 594:	80 83       	st	Z, r24
 596:	0e c0       	rjmp	.+28     	; 0x5b4 <DIO_U8_SetPortDirection+0x74>
		break;
	case Group_B:
			DIO_U8_DDRB = Copy_u8_Port_Dir;
 598:	e7 e3       	ldi	r30, 0x37	; 55
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	8a 81       	ldd	r24, Y+2	; 0x02
 59e:	80 83       	st	Z, r24
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <DIO_U8_SetPortDirection+0x74>
		break;
	case Group_C:
			DIO_U8_DDRC = Copy_u8_Port_Dir;
 5a2:	e4 e3       	ldi	r30, 0x34	; 52
 5a4:	f0 e0       	ldi	r31, 0x00	; 0
 5a6:	8a 81       	ldd	r24, Y+2	; 0x02
 5a8:	80 83       	st	Z, r24
 5aa:	04 c0       	rjmp	.+8      	; 0x5b4 <DIO_U8_SetPortDirection+0x74>
		break;
	case Group_D:
			DIO_U8_DDRD = Copy_u8_Port_Dir;
 5ac:	e1 e3       	ldi	r30, 0x31	; 49
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	8a 81       	ldd	r24, Y+2	; 0x02
 5b2:	80 83       	st	Z, r24
		//wrong function parameters were given.
		break;

	}

}
 5b4:	0f 90       	pop	r0
 5b6:	0f 90       	pop	r0
 5b8:	0f 90       	pop	r0
 5ba:	0f 90       	pop	r0
 5bc:	cf 91       	pop	r28
 5be:	df 91       	pop	r29
 5c0:	08 95       	ret

000005c2 <DIO_U8_SetPortValue>:

void DIO_U8_SetPortValue(u8 Copy_U8_Port_ID , u8 Copy_U8_Port_Val){
 5c2:	df 93       	push	r29
 5c4:	cf 93       	push	r28
 5c6:	00 d0       	rcall	.+0      	; 0x5c8 <DIO_U8_SetPortValue+0x6>
 5c8:	00 d0       	rcall	.+0      	; 0x5ca <DIO_U8_SetPortValue+0x8>
 5ca:	cd b7       	in	r28, 0x3d	; 61
 5cc:	de b7       	in	r29, 0x3e	; 62
 5ce:	89 83       	std	Y+1, r24	; 0x01
 5d0:	6a 83       	std	Y+2, r22	; 0x02

	switch(Copy_U8_Port_ID){
 5d2:	89 81       	ldd	r24, Y+1	; 0x01
 5d4:	28 2f       	mov	r18, r24
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	3c 83       	std	Y+4, r19	; 0x04
 5da:	2b 83       	std	Y+3, r18	; 0x03
 5dc:	8b 81       	ldd	r24, Y+3	; 0x03
 5de:	9c 81       	ldd	r25, Y+4	; 0x04
 5e0:	81 30       	cpi	r24, 0x01	; 1
 5e2:	91 05       	cpc	r25, r1
 5e4:	d1 f0       	breq	.+52     	; 0x61a <DIO_U8_SetPortValue+0x58>
 5e6:	2b 81       	ldd	r18, Y+3	; 0x03
 5e8:	3c 81       	ldd	r19, Y+4	; 0x04
 5ea:	22 30       	cpi	r18, 0x02	; 2
 5ec:	31 05       	cpc	r19, r1
 5ee:	2c f4       	brge	.+10     	; 0x5fa <DIO_U8_SetPortValue+0x38>
 5f0:	8b 81       	ldd	r24, Y+3	; 0x03
 5f2:	9c 81       	ldd	r25, Y+4	; 0x04
 5f4:	00 97       	sbiw	r24, 0x00	; 0
 5f6:	61 f0       	breq	.+24     	; 0x610 <DIO_U8_SetPortValue+0x4e>
 5f8:	1e c0       	rjmp	.+60     	; 0x636 <DIO_U8_SetPortValue+0x74>
 5fa:	2b 81       	ldd	r18, Y+3	; 0x03
 5fc:	3c 81       	ldd	r19, Y+4	; 0x04
 5fe:	22 30       	cpi	r18, 0x02	; 2
 600:	31 05       	cpc	r19, r1
 602:	81 f0       	breq	.+32     	; 0x624 <DIO_U8_SetPortValue+0x62>
 604:	8b 81       	ldd	r24, Y+3	; 0x03
 606:	9c 81       	ldd	r25, Y+4	; 0x04
 608:	83 30       	cpi	r24, 0x03	; 3
 60a:	91 05       	cpc	r25, r1
 60c:	81 f0       	breq	.+32     	; 0x62e <DIO_U8_SetPortValue+0x6c>
 60e:	13 c0       	rjmp	.+38     	; 0x636 <DIO_U8_SetPortValue+0x74>

		case Group_A:
			DIO_U8_PORTA = Copy_U8_Port_Val;
 610:	eb e3       	ldi	r30, 0x3B	; 59
 612:	f0 e0       	ldi	r31, 0x00	; 0
 614:	8a 81       	ldd	r24, Y+2	; 0x02
 616:	80 83       	st	Z, r24
 618:	0e c0       	rjmp	.+28     	; 0x636 <DIO_U8_SetPortValue+0x74>
			break;
		case Group_B:
				DIO_U8_PORTB = Copy_U8_Port_Val;
 61a:	e8 e3       	ldi	r30, 0x38	; 56
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	8a 81       	ldd	r24, Y+2	; 0x02
 620:	80 83       	st	Z, r24
 622:	09 c0       	rjmp	.+18     	; 0x636 <DIO_U8_SetPortValue+0x74>
			break;
		case Group_C:
				DIO_U8_PORTC = Copy_U8_Port_Val;
 624:	e5 e3       	ldi	r30, 0x35	; 53
 626:	f0 e0       	ldi	r31, 0x00	; 0
 628:	8a 81       	ldd	r24, Y+2	; 0x02
 62a:	80 83       	st	Z, r24
 62c:	04 c0       	rjmp	.+8      	; 0x636 <DIO_U8_SetPortValue+0x74>
			break;
		case Group_D:
				DIO_U8_PORTD = Copy_U8_Port_Val;
 62e:	e2 e3       	ldi	r30, 0x32	; 50
 630:	f0 e0       	ldi	r31, 0x00	; 0
 632:	8a 81       	ldd	r24, Y+2	; 0x02
 634:	80 83       	st	Z, r24
			break;

		}


}
 636:	0f 90       	pop	r0
 638:	0f 90       	pop	r0
 63a:	0f 90       	pop	r0
 63c:	0f 90       	pop	r0
 63e:	cf 91       	pop	r28
 640:	df 91       	pop	r29
 642:	08 95       	ret

00000644 <DIO_U8_GetPortValue>:
u8 DIO_U8_GetPortValue(u8 Copy_U8_Port_ID){
 644:	df 93       	push	r29
 646:	cf 93       	push	r28
 648:	00 d0       	rcall	.+0      	; 0x64a <DIO_U8_GetPortValue+0x6>
 64a:	00 d0       	rcall	.+0      	; 0x64c <DIO_U8_GetPortValue+0x8>
 64c:	0f 92       	push	r0
 64e:	cd b7       	in	r28, 0x3d	; 61
 650:	de b7       	in	r29, 0x3e	; 62
 652:	8a 83       	std	Y+2, r24	; 0x02
	u8 Port_Val;
	switch(Copy_U8_Port_ID){
 654:	8a 81       	ldd	r24, Y+2	; 0x02
 656:	28 2f       	mov	r18, r24
 658:	30 e0       	ldi	r19, 0x00	; 0
 65a:	3d 83       	std	Y+5, r19	; 0x05
 65c:	2c 83       	std	Y+4, r18	; 0x04
 65e:	8c 81       	ldd	r24, Y+4	; 0x04
 660:	9d 81       	ldd	r25, Y+5	; 0x05
 662:	81 30       	cpi	r24, 0x01	; 1
 664:	91 05       	cpc	r25, r1
 666:	d1 f0       	breq	.+52     	; 0x69c <DIO_U8_GetPortValue+0x58>
 668:	2c 81       	ldd	r18, Y+4	; 0x04
 66a:	3d 81       	ldd	r19, Y+5	; 0x05
 66c:	22 30       	cpi	r18, 0x02	; 2
 66e:	31 05       	cpc	r19, r1
 670:	2c f4       	brge	.+10     	; 0x67c <DIO_U8_GetPortValue+0x38>
 672:	8c 81       	ldd	r24, Y+4	; 0x04
 674:	9d 81       	ldd	r25, Y+5	; 0x05
 676:	00 97       	sbiw	r24, 0x00	; 0
 678:	61 f0       	breq	.+24     	; 0x692 <DIO_U8_GetPortValue+0x4e>
 67a:	1f c0       	rjmp	.+62     	; 0x6ba <DIO_U8_GetPortValue+0x76>
 67c:	2c 81       	ldd	r18, Y+4	; 0x04
 67e:	3d 81       	ldd	r19, Y+5	; 0x05
 680:	22 30       	cpi	r18, 0x02	; 2
 682:	31 05       	cpc	r19, r1
 684:	81 f0       	breq	.+32     	; 0x6a6 <DIO_U8_GetPortValue+0x62>
 686:	8c 81       	ldd	r24, Y+4	; 0x04
 688:	9d 81       	ldd	r25, Y+5	; 0x05
 68a:	83 30       	cpi	r24, 0x03	; 3
 68c:	91 05       	cpc	r25, r1
 68e:	81 f0       	breq	.+32     	; 0x6b0 <DIO_U8_GetPortValue+0x6c>
 690:	14 c0       	rjmp	.+40     	; 0x6ba <DIO_U8_GetPortValue+0x76>
	case Group_A:
		Port_Val = DIO_U8_PINA;
 692:	e9 e3       	ldi	r30, 0x39	; 57
 694:	f0 e0       	ldi	r31, 0x00	; 0
 696:	80 81       	ld	r24, Z
 698:	89 83       	std	Y+1, r24	; 0x01
 69a:	12 c0       	rjmp	.+36     	; 0x6c0 <DIO_U8_GetPortValue+0x7c>
		break;
	case Group_B:
		Port_Val = DIO_U8_PINB;
 69c:	e6 e3       	ldi	r30, 0x36	; 54
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	80 81       	ld	r24, Z
 6a2:	89 83       	std	Y+1, r24	; 0x01
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <DIO_U8_GetPortValue+0x7c>
		break;
	case Group_C:
		Port_Val = DIO_U8_PINC;
 6a6:	e3 e3       	ldi	r30, 0x33	; 51
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	89 83       	std	Y+1, r24	; 0x01
 6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <DIO_U8_GetPortValue+0x7c>
		break;
	case Group_D:
		Port_Val = DIO_U8_PIND;
 6b0:	e0 e3       	ldi	r30, 0x30	; 48
 6b2:	f0 e0       	ldi	r31, 0x00	; 0
 6b4:	80 81       	ld	r24, Z
 6b6:	89 83       	std	Y+1, r24	; 0x01
 6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <DIO_U8_GetPortValue+0x7c>
		break;
	default:
		return Invalid_Port_ID;
 6ba:	9f ef       	ldi	r25, 0xFF	; 255
 6bc:	9b 83       	std	Y+3, r25	; 0x03
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_U8_GetPortValue+0x80>
	}
	return Port_Val;
 6c0:	29 81       	ldd	r18, Y+1	; 0x01
 6c2:	2b 83       	std	Y+3, r18	; 0x03
 6c4:	8b 81       	ldd	r24, Y+3	; 0x03

}
 6c6:	0f 90       	pop	r0
 6c8:	0f 90       	pop	r0
 6ca:	0f 90       	pop	r0
 6cc:	0f 90       	pop	r0
 6ce:	0f 90       	pop	r0
 6d0:	cf 91       	pop	r28
 6d2:	df 91       	pop	r29
 6d4:	08 95       	ret

000006d6 <main>:
/*
 * main.c
 *
 *      Author: Youssef
 */
int main(){
 6d6:	df 93       	push	r29
 6d8:	cf 93       	push	r28
 6da:	cd b7       	in	r28, 0x3d	; 61
 6dc:	de b7       	in	r29, 0x3e	; 62
	return 0;
 6de:	80 e0       	ldi	r24, 0x00	; 0
 6e0:	90 e0       	ldi	r25, 0x00	; 0
}
 6e2:	cf 91       	pop	r28
 6e4:	df 91       	pop	r29
 6e6:	08 95       	ret

000006e8 <_exit>:
 6e8:	f8 94       	cli

000006ea <__stop_program>:
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <__stop_program>
