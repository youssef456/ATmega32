Archive member included because of file (symbol)

e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./EXTI_Program.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

AVoidCallBack       0x6               ./EXTI_Program.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC_Program.o
LOAD ./DIO_Program.o
LOAD ./EXTI_Program.o
LOAD ./TIMER_0_CM_Program.o
LOAD e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xd96
 *(.vectors)
 .vectors       0x00000000       0x54 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./ADC_Program.o
 .text          0x0000007c        0x0 ./DIO_Program.o
 .text          0x0000007c        0x0 ./EXTI_Program.o
 .text          0x0000007c        0x0 ./TIMER_0_CM_Program.o
 .text          0x0000007c        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_Void_Init
                0x0000007c       0x70 ./ADC_Program.o
                0x0000007c                ADC_Void_Init
 .text.ADC_U8_Read_channel
                0x000000ec       0xa4 ./ADC_Program.o
                0x000000ec                ADC_U8_Read_channel
 .text.DIO_U8_Set_Pin_Value
                0x00000190      0x1f6 ./DIO_Program.o
                0x00000190                DIO_U8_Set_Pin_Value
 .text.DIO_U8_Get_Pin_Value
                0x00000386      0x114 ./DIO_Program.o
                0x00000386                DIO_U8_Get_Pin_Value
 .text.DIO_U8_Set_Pin_Direction
                0x0000049a      0x1e8 ./DIO_Program.o
                0x0000049a                DIO_U8_Set_Pin_Direction
 .text.DIO_U8_Set_Port_Direction
                0x00000682       0x96 ./DIO_Program.o
                0x00000682                DIO_U8_Set_Port_Direction
 .text.DIO_U8_Set_Port_Value
                0x00000718       0x96 ./DIO_Program.o
                0x00000718                DIO_U8_Set_Port_Value
 .text.DIO_U8_Get_Pin_Direction
                0x000007ae      0x106 ./DIO_Program.o
                0x000007ae                DIO_U8_Get_Pin_Direction
 .text.DIO_U8_Get_Port_Direction
                0x000008b4       0x96 ./DIO_Program.o
                0x000008b4                DIO_U8_Get_Port_Direction
 .text.DIO_U8_Get_Port_Value
                0x0000094a       0xaa ./DIO_Program.o
                0x0000094a                DIO_U8_Get_Port_Value
 .text.__vector_1
                0x000009f4       0x66 ./EXTI_Program.o
                0x000009f4                __vector_1
 .text.__vector_2
                0x00000a5a       0x66 ./EXTI_Program.o
                0x00000a5a                __vector_2
 .text.__vector_3
                0x00000ac0       0x66 ./EXTI_Program.o
                0x00000ac0                __vector_3
 .text.EXTI_Void_Global_Enable_Disable
                0x00000b26       0x54 ./EXTI_Program.o
                0x00000b26                EXTI_Void_Global_Enable_Disable
 .text.EXTI_Void_Ein_Dis
                0x00000b7a       0x6e ./EXTI_Program.o
                0x00000b7a                EXTI_Void_Ein_Dis
 .text.EXTI_U8_Set_Level
                0x00000be8      0x12e ./EXTI_Program.o
                0x00000be8                EXTI_U8_Set_Level
 .text.EXTI_Void_Set_Call_Back
                0x00000d16       0x38 ./EXTI_Program.o
                0x00000d16                EXTI_Void_Set_Call_Back
 .text.main     0x00000d4e       0x44 ./TIMER_0_CM_Program.o
                0x00000d4e                main
 .text.libgcc   0x00000d92        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000d92        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000d92                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000d92        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000d92                exit
                0x00000d92                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000d92        0x4 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000d96                _etext = .

.data           0x00800060        0x0 load address 0x00000d96
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC_Program.o
 .data          0x00800060        0x0 ./DIO_Program.o
 .data          0x00800060        0x0 ./EXTI_Program.o
 .data          0x00800060        0x0 ./TIMER_0_CM_Program.o
 .data          0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x6
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./ADC_Program.o
 .bss           0x00800060        0x0 ./DIO_Program.o
 .bss           0x00800060        0x0 ./EXTI_Program.o
 .bss           0x00800060        0x0 ./TIMER_0_CM_Program.o
 .bss           0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/embedded systems/material.imtschool.com/00-tools/03-imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0x6 ./EXTI_Program.o
                0x00800060                AVoidCallBack
                0x00800066                PROVIDE (__bss_end, .)
                0x00000d96                __data_load_start = LOADADDR (.data)
                0x00000d96                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800066        0x0
                0x00800066                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800066                PROVIDE (__noinit_end, .)
                0x00800066                _end = .
                0x00800066                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xf18
 *(.stab)
 .stab          0x00000000      0x288 ./ADC_Program.o
 .stab          0x00000288      0x84c ./DIO_Program.o
                                0x8c4 (size before relaxing)
 .stab          0x00000ad4      0x30c ./EXTI_Program.o
                                0x384 (size before relaxing)
 .stab          0x00000de0      0x138 ./TIMER_0_CM_Program.o
                                0x1b0 (size before relaxing)

.stabstr        0x00000000      0xc01
 *(.stabstr)
 .stabstr       0x00000000      0xc01 ./ADC_Program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TIMER_0_FAST_PWM.elf elf32-avr)
LOAD linker stubs
